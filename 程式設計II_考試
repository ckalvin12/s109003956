[1]舉例說明　傳值呼叫(call by value)　與　參考呼叫(call by reference)

傳值呼叫(call by value) : 方法中的虛引數宣告為基本資料型別,如char、byte、short、int、long、float、double、boolean等八種型別變數, 傳遞方式是傳值呼叫。

public class CallByVal {
	public static void main(String[] args) {
		int a = 10, b = 15;
		System.out.println(" 傳值呼叫前\ta=" + a + "\tb=" + b );
		byVal(a, b);
		System.out.println(" 傳值呼叫後\ta=" + a + "\tb=" + b );
	}

	static void byVal(int x, int y) {
		int t; //以變數t作為暫存區，將引數互換
		t = x;
		x = y;
		y = t;
		System.out.println(" 傳值呼叫中\tx=" + x + "\ty=" + y );
	}
}

傳值呼叫前     a = 10, b = 15
傳值呼叫中     x = 15, y = 10
傳值呼叫後     a = 10, b = 15


參考呼叫(call by reference): 方法中的虛引數宣告為參考資料型別,如陣列、物件...等,傳遞方式是參考呼叫。
class Obj {
	int a, b;

	Obj() {
		a = 10;
		b = 15;
	}
}

public class CallByRef {
	public static void main(String[] args) {
		Obj obj = new Obj();
		System.out.println(" 參考呼叫前\t a = " + obj.a + "\tb = " + obj.b);
		byRef(obj);
		System.out.println(" 參考呼叫後\t a = " + obj.a + "\tb = " + obj.b);
	}

	static void byRef(Obj p) {
		int t;
		t = p.a;
		p.a = p.b;
		p.b = t;
	}
}
傳值呼叫前     a = 10, b = 15
傳值呼叫後     a = 15, b = 10



[2]舉例說明　方法多載:
方法多載為同一個類別中,允許方法使用相同的名稱,但是後面所接的引數串列必須是資料型別不一樣、個數或順序不一樣。

例子: void method(){}
      int method(){}                 //不能多載:雖然傳回值不同但引數個數相同
      void method(int a){}	    //成功多載:比第1行的方法多一個引數  
      void method(int b){} 	    //不能多載:引數名稱不同,但和第3行的型別和個數相同
      void method(String s){}       //成功多載: 雖然和第3行引數個數相同但型別不同
      void method(int a, String s){}   //成功多載: 引數個數和型別都不同
      void method(String s, int a){}    //成功多載: 和第6行引數和型別相同但順序不同





費氏數列:遞迴方法 
class recurse_Fibonacci {

    static int fib(int total){
      //Base Case
      if (total <= 1){
        return total;
      }

      return fib(total-1) + fib(total-2);
    }
    public static void main( String args[] ) {
  int total = 0;
   Scanner scanner = new Scanner(System.in);
		System.out.println("Enter a number: ");
		total = scanner.nextInt();
         for (int i= 0; i < total; i++)
            {System.out.print(fib(i) + " ");}
  }

}

費氏數列: iterative 
class for_Fibonacci {
    public static void main( String args[] ) {
 int number = 0;
		Scanner scanner = new Scanner(System.in);

		System.out.println("Enter a number: ");
		number = scanner.nextInt();

		if(number == 1) {
			System.out.println("last Fibonacci num = 1");
		} else if(number == 2) {
			System.out.println("last Fibonacci num = 1");
		} else {
			int res = calculate(number);
			System.out.println("last Fibonacci num = "+res);
		}
	}

	private static int calculate(int num) {
		// TODO Auto-generated method stub
		int p1 = 1; //the first number in fibonacci
		int p2 = 1; //the second number in fibonacci
		int res = 0;
		for(int i = 3; i <= num; i++) {
			res = p1 + p2;
			p1 = p2;
			p2 = res;
		}

		return res;
	}

}
